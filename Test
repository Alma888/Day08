# Day08

问题：Test.main() 函数执行后的输出是（22  34  17）
解题思路：本题考察对多态的理解，对处理异常语句的理解，以及对this的理解。
         1、首先new B()，是构造B类的实例对象，但是我们都知道执行构造方法都是先执行父类的构造方法，
            再执行子类的，所以先执行父类A的构造方法。
         2、执行A类构造时，构造方法里的setValue()方法是B类的，而不是A类的，因为是正在实例化B类，所以是执行B类的方法。
         3、执行B类的setValue()方法时，其中又要调用父类的setValue()方法，所以调用父类方法时传入的参数是2*5=10；所以得到的B类的value值为10
         4、此时执行setValue(getValue()-3)语句，先执行里面的getValue()，又B类里没有该方法，所以去调用A类的该方法。
         5、调用中，刚进入方法的value值为10，value++后，值为11。接下来在执行return语句之前，先去执行finally中的语句。
         6、finally中的this绑定的是B类实例化的对象，所以调用的是B类的setValue()方法，传入的值就是刚刚还未返回去的值11，接下来又要重复步骤3的操作。
         7、重复完步骤3后，得到的值为2*11=22，最后执行finally中的System.out.println(value). 输出22————————————————————————————————————————————————
         8、执行完finally中的语句后，再去返回刚刚未返回的value值11.(也就是步骤4里的getValue()方法返回的是11)
         9、接下来执行setValue(11 - 3)  ——————>  setValue(8);执行该方法（B类的），又重复步骤3，最后得到的value值为16
         10、到这里A类和B类的构造方法就执行完了，B类的对象也创建好了。接下来就去执行主方法里的调用getValue()方法。
         11、进入getValue()，value值加1后是17。接下来又是在执行return语句之前，先去执行finally中的语句。同理后输出的value值为2*17=34———————————————————————
         12、再去返回刚刚未返回的value值17，所以getValue()方法的返回值为17，所以主方法将输出17—————————————————————————————————————————————————————————————
         
         
public class Test {
public static void main(String [] args){
System.out.println(new B().getValue());
}
static class A{
protected int value;
public A(int v) {
setValue(v);
}
public void setValue(int value){
this.value = value;
}
public int getValue(){
try{
value++;
return value;
} catch(Exception e){
System.out.println(e.toString());
} finally {
this.setValue(value);
System.out.println(value);
}
return value;
}
}
static class B extends A{
public B() {
super(5);
setValue(getValue() - 3);
}
public void setValue(int value){
super.setValue(2 * value);
}
}
}
